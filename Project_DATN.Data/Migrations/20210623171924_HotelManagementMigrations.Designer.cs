// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project_DATN.Data.EF.DBContext;

namespace Project_DATN.Data.Migrations
{
    [DbContext(typeof(DB_Context))]
    [Migration("20210623171924_HotelManagementMigrations")]
    partial class HotelManagementMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.ChiTiet_HoaDon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_DichVu")
                        .HasColumnType("int");

                    b.Property<int>("ID_HoaDon")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("soLuongDichVu")
                        .HasColumnType("int");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_DichVu");

                    b.HasIndex("ID_HoaDon");

                    b.ToTable("ChiTiet_HoaDon");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_DichVu = 1,
                            ID_HoaDon = 1,
                            soLuongDichVu = 10,
                            trangThai = "Đang hoạt động"
                        },
                        new
                        {
                            ID = 2,
                            ID_DichVu = 2,
                            ID_HoaDon = 2,
                            soLuongDichVu = 20,
                            trangThai = "Đang hoạt động"
                        },
                        new
                        {
                            ID = 3,
                            ID_DichVu = 3,
                            ID_HoaDon = 3,
                            soLuongDichVu = 10,
                            trangThai = "Ngừng hoạt động"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.ChiTiet_QuyenHan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_QuyenHan")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kiemTraHanhDong")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("maHanhDong")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("moTa")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_QuyenHan");

                    b.ToTable("ChiTiet_QuyenHan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_QuyenHan = 1,
                            kiemTraHanhDong = "Đã thực hiện",
                            maHanhDong = "ALL",
                            moTa = "Toàn quyền CRUD"
                        },
                        new
                        {
                            ID = 2,
                            ID_QuyenHan = 2,
                            kiemTraHanhDong = "Đã thực hiện",
                            maHanhDong = "EDIT",
                            moTa = "Chỉ được sửa"
                        },
                        new
                        {
                            ID = 3,
                            ID_QuyenHan = 3,
                            kiemTraHanhDong = "Chưa được xoá",
                            maHanhDong = "DELETE",
                            moTa = "Chỉ được xoá"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.ChucVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_PhongBan")
                        .HasColumnType("int");

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("denNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ngayBatDauApDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("tenChucVu")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("trangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_PhongBan");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("ChucVu");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_PhongBan = 1,
                            ID_TaiKhoan = 1,
                            ngayBatDauApDung = new DateTime(2021, 6, 15, 7, 18, 26, 0, DateTimeKind.Unspecified),
                            tenChucVu = "Quản lý cơ sở",
                            trangThai = 0
                        },
                        new
                        {
                            ID = 2,
                            ID_PhongBan = 2,
                            ID_TaiKhoan = 2,
                            ngayBatDauApDung = new DateTime(2021, 6, 15, 7, 18, 26, 0, DateTimeKind.Unspecified),
                            tenChucVu = "Nhân viên lễ tân",
                            trangThai = 0
                        },
                        new
                        {
                            ID = 3,
                            ID_PhongBan = 3,
                            ID_TaiKhoan = 3,
                            denNgay = new DateTime(2021, 6, 15, 7, 18, 26, 0, DateTimeKind.Unspecified),
                            ngayBatDauApDung = new DateTime(2021, 6, 15, 7, 18, 26, 0, DateTimeKind.Unspecified),
                            tenChucVu = "Quản lý chuỗi cơ sở",
                            trangThai = 0
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.CoSo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_Quan_Huyen")
                        .HasColumnType("int");

                    b.Property<int>("ID_TK_NH")
                        .HasColumnType("int");

                    b.Property<int>("ID_Tinh_TP")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("hoTenNguoiDaiDien")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("maCoSo")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("maSoThue")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("soDienThoai")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)");

                    b.Property<string>("tenCoSo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_Quan_Huyen");

                    b.HasIndex("ID_TK_NH");

                    b.HasIndex("ID_Tinh_TP");

                    b.ToTable("CoSo");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_Quan_Huyen = 1,
                            ID_TK_NH = 1,
                            ID_Tinh_TP = 1,
                            email = "vuduong99df@gmail.com",
                            ghiChu = "Vui lòng khách đến vừa lòng khách đi",
                            hoTenNguoiDaiDien = "Vũ Văn Dương",
                            maCoSo = "CS001",
                            maSoThue = "8888888888",
                            soDienThoai = "0989888888",
                            tenCoSo = "An Nhiên Luxury Hotel",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 2,
                            ID_Quan_Huyen = 2,
                            ID_TK_NH = 2,
                            ID_Tinh_TP = 2,
                            email = "daikathainguyen@gmail.com",
                            ghiChu = "Lấp lánh như kim cương",
                            hoTenNguoiDaiDien = "Ngô Duy Long",
                            maCoSo = "CS002",
                            maSoThue = "0006668686",
                            soDienThoai = "0989989898",
                            tenCoSo = "Diamonds Hotel",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            ID_Quan_Huyen = 3,
                            ID_TK_NH = 3,
                            ID_Tinh_TP = 3,
                            email = "presentduck@gmail.com",
                            ghiChu = "Anime Hotel",
                            hoTenNguoiDaiDien = "Phạm Quốc Việt",
                            maCoSo = "CS003",
                            maSoThue = "8888888888",
                            soDienThoai = "0989888886",
                            tenCoSo = "Present Duck Hotel",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.DatPhong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_KhachHang")
                        .HasColumnType("int");

                    b.Property<int>("ID_LoaiPhong")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("maDatPhong")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("ngayGioDat")
                        .HasColumnType("datetime2");

                    b.Property<int>("soLuongKhach")
                        .HasColumnType("int");

                    b.Property<int>("soLuongPhongDat")
                        .HasColumnType("int");

                    b.Property<string>("thoiGianLuuTru")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("thuCung")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_KhachHang");

                    b.HasIndex("ID_LoaiPhong");

                    b.ToTable("DatPhong");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_KhachHang = 1,
                            ID_LoaiPhong = 1,
                            ghiChu = "Phòng Luxury có mang theo thú cưng",
                            maDatPhong = "DP001",
                            ngayGioDat = new DateTime(2021, 8, 8, 18, 9, 8, 0, DateTimeKind.Unspecified),
                            soLuongKhach = 10,
                            soLuongPhongDat = 2,
                            thoiGianLuuTru = "3 ngày 2 đêm",
                            thuCung = "Chó chihuahua",
                            trangThai = "Đã đặt phòng"
                        },
                        new
                        {
                            ID = 2,
                            ID_KhachHang = 2,
                            ID_LoaiPhong = 2,
                            ghiChu = "Phòng tiêu chuẩn",
                            maDatPhong = "DP002",
                            ngayGioDat = new DateTime(2021, 5, 18, 18, 9, 8, 0, DateTimeKind.Unspecified),
                            soLuongKhach = 10,
                            soLuongPhongDat = 2,
                            thoiGianLuuTru = "1 tuần",
                            trangThai = "Đã đặt phòng"
                        },
                        new
                        {
                            ID = 3,
                            ID_KhachHang = 3,
                            ID_LoaiPhong = 3,
                            ghiChu = "Connecting room",
                            maDatPhong = "DP003",
                            ngayGioDat = new DateTime(2021, 8, 18, 18, 9, 8, 0, DateTimeKind.Unspecified),
                            soLuongKhach = 2,
                            soLuongPhongDat = 1,
                            thoiGianLuuTru = "2 giờ",
                            trangThai = "Chưa xác nhận"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.DichVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_LoaiDichVu")
                        .HasColumnType("int");

                    b.Property<decimal>("donGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("donViTien")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("donViTinh")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moTa")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("tenDichVu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_LoaiDichVu");

                    b.ToTable("DichVu");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_LoaiDichVu = 1,
                            donGia = 0m,
                            moTa = "Cơm gà ngon",
                            tenDichVu = "Gọi cơm gà",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 2,
                            ID_LoaiDichVu = 2,
                            donGia = 0m,
                            moTa = "Nước ngọt có gas",
                            tenDichVu = "Coca-Cola",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            ID_LoaiDichVu = 3,
                            donGia = 0m,
                            moTa = "Giặt khô",
                            tenDichVu = "Giặt ủi",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.GiaoCa", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("caLam")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("soLuongHoaDon")
                        .HasColumnType("int");

                    b.Property<DateTime>("thoiDiemGiaoCa")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("tongTienChenh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("tongTienDauCa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("GiaoCa");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_TaiKhoan = 1,
                            caLam = "Ca sáng",
                            ghiChu = "10 hoá đơn phòng Standard",
                            soLuongHoaDon = 10,
                            thoiDiemGiaoCa = new DateTime(2021, 6, 20, 16, 28, 38, 0, DateTimeKind.Unspecified),
                            tongTienChenh = 10000000m,
                            tongTienDauCa = 10000000m
                        },
                        new
                        {
                            ID = 2,
                            ID_TaiKhoan = 2,
                            caLam = "Ca chiều",
                            ghiChu = "5 hoá đơn phòng VIP",
                            soLuongHoaDon = 5,
                            thoiDiemGiaoCa = new DateTime(2021, 6, 21, 16, 28, 38, 0, DateTimeKind.Unspecified),
                            tongTienChenh = 10000000m,
                            tongTienDauCa = 20000000m
                        },
                        new
                        {
                            ID = 3,
                            ID_TaiKhoan = 3,
                            caLam = "Ca gãy",
                            ghiChu = "5 hoá đơn phòng Standard",
                            soLuongHoaDon = 5,
                            thoiDiemGiaoCa = new DateTime(2021, 6, 22, 16, 28, 38, 0, DateTimeKind.Unspecified),
                            tongTienChenh = 5000000m,
                            tongTienDauCa = 30000000m
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.GiaoDich", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("loaiHinhThucThanhToan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ngayGioThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("GiaoDich");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            loaiHinhThucThanhToan = "Thẻ ngân hàng",
                            ngayGioThanhToan = new DateTime(2018, 8, 8, 18, 28, 38, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 2,
                            loaiHinhThucThanhToan = "Tiền mặt",
                            ngayGioThanhToan = new DateTime(2016, 6, 6, 16, 26, 36, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = 3,
                            loaiHinhThucThanhToan = "Tiền mặt",
                            ngayGioThanhToan = new DateTime(2019, 9, 9, 19, 29, 39, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.HoaDon", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DatPhongID")
                        .HasColumnType("int");

                    b.Property<int>("ID_GiaoCa")
                        .HasColumnType("int");

                    b.Property<int>("ID_GiaoDich")
                        .HasColumnType("int");

                    b.Property<int>("ID_KhachHang")
                        .HasColumnType("int");

                    b.Property<int>("ID_LoaiPhong")
                        .HasColumnType("int");

                    b.Property<int>("ID_Phong")
                        .HasColumnType("int");

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<decimal>("chietKhau")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("cocTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("giamGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("giamTru")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("maHoaDon")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("ngayGioLap")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayGioNhanPhong")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayGioTraPhong")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("phuThu")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("thoiGianThue")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<decimal>("thueVAT")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("tienKhachDua")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("tienTraLai")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("DatPhongID");

                    b.HasIndex("ID_GiaoCa");

                    b.HasIndex("ID_GiaoDich");

                    b.HasIndex("ID_KhachHang");

                    b.HasIndex("ID_LoaiPhong");

                    b.HasIndex("ID_Phong");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("HoaDon");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_GiaoCa = 1,
                            ID_GiaoDich = 1,
                            ID_KhachHang = 1,
                            ID_LoaiPhong = 1,
                            ID_Phong = 1,
                            ID_TaiKhoan = 1,
                            chietKhau = 0m,
                            cocTien = 0m,
                            giamGia = 1000000m,
                            giamTru = 0m,
                            maHoaDon = "HĐ0001",
                            ngayGioLap = new DateTime(2021, 11, 15, 18, 28, 38, 0, DateTimeKind.Unspecified),
                            ngayGioNhanPhong = new DateTime(2021, 11, 16, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ngayGioTraPhong = new DateTime(2021, 11, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            phuThu = 800000m,
                            thoiGianThue = " 1 tuần 1 đêm",
                            thueVAT = 888000m,
                            tienKhachDua = 8000000m,
                            tienTraLai = 0m,
                            trangThai = "Đã thanh toán"
                        },
                        new
                        {
                            ID = 2,
                            ID_GiaoCa = 2,
                            ID_GiaoDich = 2,
                            ID_KhachHang = 2,
                            ID_LoaiPhong = 2,
                            ID_Phong = 2,
                            ID_TaiKhoan = 2,
                            chietKhau = 0m,
                            cocTien = 0m,
                            giamGia = 1000000m,
                            giamTru = 0m,
                            maHoaDon = "HĐ0002",
                            ngayGioLap = new DateTime(2021, 11, 16, 19, 29, 39, 0, DateTimeKind.Unspecified),
                            ngayGioNhanPhong = new DateTime(2021, 11, 17, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ngayGioTraPhong = new DateTime(2021, 11, 23, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            phuThu = 800000m,
                            thoiGianThue = " 1 tuần 1 đêm",
                            thueVAT = 888000m,
                            tienKhachDua = 8000000m,
                            tienTraLai = 0m,
                            trangThai = "Đã thanh toán"
                        },
                        new
                        {
                            ID = 3,
                            ID_GiaoCa = 3,
                            ID_GiaoDich = 3,
                            ID_KhachHang = 3,
                            ID_LoaiPhong = 3,
                            ID_Phong = 3,
                            ID_TaiKhoan = 3,
                            chietKhau = 0m,
                            cocTien = 0m,
                            giamGia = 1000000m,
                            giamTru = 0m,
                            maHoaDon = "HĐ0003",
                            ngayGioLap = new DateTime(2021, 11, 18, 20, 20, 20, 0, DateTimeKind.Unspecified),
                            ngayGioNhanPhong = new DateTime(2021, 11, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            ngayGioTraPhong = new DateTime(2021, 11, 24, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            phuThu = 800000m,
                            thoiGianThue = " 1 tuần 1 đêm",
                            thueVAT = 888000m,
                            tienKhachDua = 8000000m,
                            tienTraLai = 0m,
                            trangThai = "Đã thanh toán"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.KhachHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CCCD")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("diaChi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("email")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gioiTinh")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("hoTenKH")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("maKH")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("quocTich")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("soDienThoai")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("KhachHang");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CCCD = "033001002001",
                            diaChi = "Phù Cừ - Hưng Yên",
                            email = "daikaphucu@gmail.com",
                            gioiTinh = "Nam",
                            hoTenKH = "Nguyễn Hữu Phú",
                            maKH = "KH001",
                            quocTich = "Việt Nam",
                            soDienThoai = "0988882001"
                        },
                        new
                        {
                            ID = 2,
                            CCCD = "033001012001",
                            diaChi = "Yên Bái",
                            email = "daigiayenbai@gmail.com",
                            gioiTinh = "Nam",
                            hoTenKH = "Phạm Quốc Việt",
                            maKH = "KH002",
                            quocTich = "Việt Nam",
                            soDienThoai = "0988682001"
                        },
                        new
                        {
                            ID = 3,
                            CCCD = "033001022001",
                            diaChi = "Yên Bái",
                            email = "daikayenbai@gmail.com",
                            gioiTinh = "Nam",
                            hoTenKH = "Lương Đức Mạnh",
                            maKH = "KH003",
                            quocTich = "Việt Nam",
                            soDienThoai = "0986862001"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Lau", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_CoSo")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("soLuongLau")
                        .HasColumnType("int");

                    b.Property<string>("tenLau")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_CoSo");

                    b.ToTable("Lau");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_CoSo = 1,
                            ghiChu = "Đang sửa tường, quét sơn tường các phòng",
                            soLuongLau = 0,
                            tenLau = "Tầng 1",
                            trangThai = "Inactive"
                        },
                        new
                        {
                            ID = 2,
                            ID_CoSo = 2,
                            soLuongLau = 0,
                            tenLau = "Tầng 2",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            ID_CoSo = 3,
                            soLuongLau = 0,
                            tenLau = "Tầng 3",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.LoaiDichVu", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moTa")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("tenLoaiDichVu")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("LoaiDichVu");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            moTa = "Gọi đồ ăn",
                            tenLoaiDichVu = "Đồ ăn",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 2,
                            moTa = "Gọi đồ uống",
                            tenLoaiDichVu = "Đồ uống",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            moTa = "Thuê ngoài",
                            tenLoaiDichVu = "Giặt là",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.LoaiPhong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("donGiaQuaDem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("donGiaTheoGio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("donGiaTheoNgay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("soNguoi")
                        .HasColumnType("int");

                    b.Property<string>("tenLoaiPhong")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("LoaiPhong");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            donGiaQuaDem = 5555555m,
                            donGiaTheoGio = 600000m,
                            donGiaTheoNgay = 6000000m,
                            ghiChu = "Phòng Luxury có đầy đủ tiện nghi, được phép mang theo thú cưng",
                            soNguoi = 5,
                            tenLoaiPhong = "VIP",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 2,
                            donGiaQuaDem = 450000000m,
                            donGiaTheoGio = 8000000m,
                            donGiaTheoNgay = 50000000m,
                            ghiChu = "Phòng dùng cho hộ gia đình/ group, được phép mang theo thú cưng",
                            soNguoi = 20,
                            tenLoaiPhong = "Connecting room",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            donGiaQuaDem = 888888m,
                            donGiaTheoGio = 200000m,
                            donGiaTheoNgay = 1000000m,
                            ghiChu = "Phòng tiêu chuẩn",
                            soNguoi = 5,
                            tenLoaiPhong = "Standard",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.LoaiPhongBan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maLoaiPhongBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("soLuongPhongBan")
                        .HasColumnType("int");

                    b.Property<string>("tenLoaiPhongBan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("trangThai")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LoaiPhongBans");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ghiChu = "Khách sạn An Nhiên Luxury Hotel",
                            soLuongPhongBan = 3,
                            tenLoaiPhongBan = "Quản lý"
                        },
                        new
                        {
                            ID = 2,
                            ghiChu = "Khách sạn An Nhiên Luxury Hotel",
                            soLuongPhongBan = 6,
                            tenLoaiPhongBan = "Nhân viên"
                        },
                        new
                        {
                            ID = 3,
                            ghiChu = "Khách sạn An Nhiên Luxury Hotel",
                            soLuongPhongBan = 3,
                            tenLoaiPhongBan = "An ninh"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Luong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("denNgay")
                        .HasColumnType("datetime2");

                    b.Property<string>("donViTinhTien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ngayBatDauApDung")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("tienThucLinh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_TaiKhoan");

                    b.ToTable("Luong");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_TaiKhoan = 1,
                            donViTinhTien = "$",
                            ngayBatDauApDung = new DateTime(2020, 11, 11, 11, 11, 11, 0, DateTimeKind.Unspecified),
                            tienThucLinh = 10000m
                        },
                        new
                        {
                            ID = 2,
                            ID_TaiKhoan = 2,
                            donViTinhTien = "$",
                            ngayBatDauApDung = new DateTime(2020, 11, 18, 18, 18, 18, 0, DateTimeKind.Unspecified),
                            tienThucLinh = 800m
                        },
                        new
                        {
                            ID = 3,
                            ID_TaiKhoan = 3,
                            denNgay = new DateTime(2020, 11, 11, 6, 8, 18, 0, DateTimeKind.Unspecified),
                            donViTinhTien = "$",
                            ngayBatDauApDung = new DateTime(2020, 11, 11, 11, 11, 11, 0, DateTimeKind.Unspecified),
                            tienThucLinh = 600m
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Phong", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_CoSo")
                        .HasColumnType("int");

                    b.Property<int>("ID_Lau")
                        .HasColumnType("int");

                    b.Property<int>("ID_LoaiPhong")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("soLuongPhong")
                        .HasColumnType("int");

                    b.Property<string>("tenPhong")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_CoSo");

                    b.HasIndex("ID_Lau");

                    b.HasIndex("ID_LoaiPhong");

                    b.ToTable("Phong");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_CoSo = 1,
                            ID_Lau = 1,
                            ID_LoaiPhong = 1,
                            ghiChu = "Phòng đang quét sơn",
                            soLuongPhong = 0,
                            tenPhong = "P01",
                            trangThai = "Inactive"
                        },
                        new
                        {
                            ID = 2,
                            ID_CoSo = 2,
                            ID_Lau = 2,
                            ID_LoaiPhong = 2,
                            ghiChu = "Phòng được mang thú cưng",
                            soLuongPhong = 0,
                            tenPhong = "P02",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            ID_CoSo = 3,
                            ID_Lau = 3,
                            ID_LoaiPhong = 3,
                            ghiChu = "Phòng không được mang thú cưng ",
                            soLuongPhong = 0,
                            tenPhong = "P03",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.PhongBan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_LoaiPhongBan")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("soLuongNhanVien")
                        .HasColumnType("int");

                    b.Property<int>("soLuongPhongBan")
                        .HasColumnType("int");

                    b.Property<string>("tenPhongBan")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("trangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ID_LoaiPhongBan");

                    b.ToTable("PhongBan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_LoaiPhongBan = 1,
                            ghiChu = "Phòng của quản lý khách sạn An Nhiên Luxury Hotel",
                            soLuongNhanVien = 5,
                            soLuongPhongBan = 0,
                            tenPhongBan = "Phòng quản trị",
                            trangThai = 0
                        },
                        new
                        {
                            ID = 2,
                            ID_LoaiPhongBan = 2,
                            ghiChu = "Phòng của quản lý khách sạn An Nhiên Luxury Hotel",
                            soLuongNhanVien = 15,
                            soLuongPhongBan = 0,
                            tenPhongBan = "Phòng lễ tân",
                            trangThai = 0
                        },
                        new
                        {
                            ID = 3,
                            ID_LoaiPhongBan = 3,
                            ghiChu = "Phòng của quản lý khách sạn An Nhiên Luxury Hotel",
                            soLuongNhanVien = 30,
                            soLuongPhongBan = 0,
                            tenPhongBan = "Phòng bảo vệ cơ sở",
                            trangThai = 0
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Quan_Huyen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenQuan_Huyen")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Quan_Huyen");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            tenQuan_Huyen = "Yên Mỹ"
                        },
                        new
                        {
                            ID = 2,
                            tenQuan_Huyen = "Bảo Lộc"
                        },
                        new
                        {
                            ID = 3,
                            tenQuan_Huyen = "Ba Đình"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.QuyenHan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moTa")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("tenQuyenHan")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("trangThai")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("QuyenHan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            moTa = "Toàn quyền hệ thống",
                            tenQuyenHan = "Quyền chủ cơ sở",
                            trangThai = 0
                        },
                        new
                        {
                            ID = 2,
                            moTa = "Check-in và check out",
                            tenQuyenHan = "Quyền lễ tân",
                            trangThai = 0
                        },
                        new
                        {
                            ID = 3,
                            moTa = "Toàn quyền quản lý trong một cơ sở",
                            tenQuyenHan = "Quyền quản lý cơ sở ",
                            trangThai = 0
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("ID_CoSo")
                        .HasColumnType("int");

                    b.Property<int>("ID_PhongBan")
                        .HasColumnType("int");

                    b.Property<int>("TrangThai")
                        .HasColumnType("int");

                    b.Property<string>("anhDaiDien")
                        .HasColumnType("nvarchar(886)");

                    b.Property<string>("diaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("gioiTinh")
                        .HasColumnType("int");

                    b.Property<string>("hoTenChuTK")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("matKhau")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<DateTime?>("ngayKetThucHopDong")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ngayThangNamSinh")
                        .HasColumnType("DATE");

                    b.Property<DateTime>("ngayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("soDienThoai")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("tenTaiKhoan")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_CoSo");

                    b.HasIndex("ID_PhongBan");

                    b.ToTable("TaiKhoan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CCCD = "03309908888",
                            ID_CoSo = 1,
                            ID_PhongBan = 1,
                            TrangThai = 0,
                            diaChi = "Yên Mỹ - Hưng Yên",
                            email = "vuduong99df@gmail.com",
                            gioiTinh = 0,
                            hoTenChuTK = "Vũ Văn Dương",
                            matKhau = "admin2021",
                            ngayThangNamSinh = new DateTime(1999, 2, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ngayVaoLam = new DateTime(2019, 9, 16, 8, 16, 28, 0, DateTimeKind.Unspecified),
                            soDienThoai = "0362416523",
                            tenTaiKhoan = "admin2021"
                        },
                        new
                        {
                            ID = 2,
                            CCCD = "03309908686",
                            ID_CoSo = 2,
                            ID_PhongBan = 2,
                            TrangThai = 0,
                            diaChi = "Yên Mỹ - Hưng Yên",
                            email = "anbinh@gmail.com",
                            gioiTinh = 0,
                            hoTenChuTK = "Phạm An Bình",
                            matKhau = "temp22021",
                            ngayKetThucHopDong = new DateTime(2021, 9, 16, 8, 6, 28, 0, DateTimeKind.Unspecified),
                            ngayThangNamSinh = new DateTime(1999, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ngayVaoLam = new DateTime(2018, 9, 16, 8, 16, 28, 0, DateTimeKind.Unspecified),
                            soDienThoai = "0986668888",
                            tenTaiKhoan = "temp22021"
                        },
                        new
                        {
                            ID = 3,
                            CCCD = "03309906888",
                            ID_CoSo = 3,
                            ID_PhongBan = 3,
                            TrangThai = 0,
                            diaChi = "Yên Mỹ - Hưng Yên",
                            email = "nhatlinh@gmail.com",
                            gioiTinh = 1,
                            hoTenChuTK = "Vũ Nhật Linh",
                            matKhau = "temp32021",
                            ngayThangNamSinh = new DateTime(2012, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ngayVaoLam = new DateTime(2030, 9, 16, 8, 16, 28, 0, DateTimeKind.Unspecified),
                            soDienThoai = "0988868888",
                            tenTaiKhoan = "temp32021"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan_NganHang", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("diaChiCN")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ghiChu")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("hoTenChuTKNH")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("soTaiKhoan")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("tenChiNhanh")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("tenNganHang")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("TaiKhoan_NganHang");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            diaChiCN = "BIDV Hưng Yên, Số 240 Nguyễn Văn Linh, P. Hiền Nam, Hưng Yên, 160000",
                            ghiChu = "No content",
                            hoTenChuTKNH = "Vũ Văn Dương",
                            soTaiKhoan = "46610001046312",
                            tenChiNhanh = "BIDV Hưng Yên",
                            tenNganHang = "Ngân hàng Thương mại cổ phần Đầu tư và Phát triển Việt Nam BIDV",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 2,
                            diaChiCN = " 304 Nguyễn Văn Linh, P. Hiền Nam, Hưng Yên",
                            ghiChu = "No content",
                            hoTenChuTKNH = "Nguyễn Ngọc Nhung",
                            soTaiKhoan = "46610001046386",
                            tenChiNhanh = "VIB Hưng Yên",
                            tenNganHang = "Ngân hàng Thương mại Cổ phần Quốc tế Việt Nam VIB",
                            trangThai = "Active"
                        },
                        new
                        {
                            ID = 3,
                            diaChiCN = " 186 Chu Mạnh Trinh, P. Hiền Nam, Hưng Yên",
                            ghiChu = "No content",
                            hoTenChuTKNH = "Trần Khánh Trang",
                            soTaiKhoan = "46610001046388",
                            tenChiNhanh = "VCB Hưng Yên",
                            tenNganHang = "Ngân hàng thương mại cổ phần Ngoại thương Việt Nam VCB",
                            trangThai = "Active"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan_QuyenHan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ID_QuyenHan")
                        .HasColumnType("int");

                    b.Property<int>("ID_TaiKhoan")
                        .HasColumnType("int");

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("maSuDung")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("moTa")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("ID_QuyenHan");

                    b.ToTable("TaiKhoan_QuyenHan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ID_QuyenHan = 1,
                            ID_TaiKhoan = 1,
                            maSuDung = "SUDUNG01"
                        },
                        new
                        {
                            ID = 2,
                            ID_QuyenHan = 2,
                            ID_TaiKhoan = 2,
                            maSuDung = "SUDUNG01"
                        },
                        new
                        {
                            ID = 3,
                            ID_QuyenHan = 3,
                            ID_TaiKhoan = 3,
                            maSuDung = "SUDUNG01"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Tinh_ThanhPho", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("fields1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fields5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tenTinh")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("trangThai")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.ToTable("Tinh_ThanhPho");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            tenTinh = "Hưng Yên"
                        },
                        new
                        {
                            ID = 2,
                            tenTinh = "Đà Lạt"
                        },
                        new
                        {
                            ID = 3,
                            tenTinh = "Hà Nội"
                        });
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.ChiTiet_HoaDon", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.DichVu", "DichVu")
                        .WithMany("ICChiTietHoaDon")
                        .HasForeignKey("ID_DichVu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.HoaDon", "HoaDon")
                        .WithMany("ICChiTiet_HoaDon")
                        .HasForeignKey("ID_HoaDon")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DichVu");

                    b.Navigation("HoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.ChiTiet_QuyenHan", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.QuyenHan", "QuyenHan")
                        .WithMany("IC_ChiTiet_QuyenHan")
                        .HasForeignKey("ID_QuyenHan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("QuyenHan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.ChucVu", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.PhongBan", "PhongBan")
                        .WithMany("ICChucVu")
                        .HasForeignKey("ID_PhongBan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("ICChucVu")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PhongBan");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.CoSo", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.Quan_Huyen", "QuanHuyen")
                        .WithMany("ICCoSo")
                        .HasForeignKey("ID_Quan_Huyen")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.TaiKhoan_NganHang", "TaiKhoanNganHang")
                        .WithMany("ICCoSo")
                        .HasForeignKey("ID_TK_NH")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.Tinh_ThanhPho", "TinhThanhPho")
                        .WithMany("ICCoSo")
                        .HasForeignKey("ID_Tinh_TP")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("QuanHuyen");

                    b.Navigation("TaiKhoanNganHang");

                    b.Navigation("TinhThanhPho");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.DatPhong", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.KhachHang", "KhachHang")
                        .WithMany("ICDatPhong")
                        .HasForeignKey("ID_KhachHang")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.LoaiPhong", "LoaiPhong")
                        .WithMany("ICDatPhong")
                        .HasForeignKey("ID_LoaiPhong")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("LoaiPhong");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.DichVu", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.LoaiDichVu", "LoaiDichVu")
                        .WithMany("ICDichVu")
                        .HasForeignKey("ID_LoaiDichVu")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoaiDichVu");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.GiaoCa", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("ICGiaoCa")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.HoaDon", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.DatPhong", null)
                        .WithMany("ICHoaDon")
                        .HasForeignKey("DatPhongID");

                    b.HasOne("Project_DATN.Data.EF.Entities.GiaoCa", "GiaoCa")
                        .WithMany("ICHoaDon")
                        .HasForeignKey("ID_GiaoCa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.GiaoDich", "GiaoDich")
                        .WithMany("ICHoaDon")
                        .HasForeignKey("ID_GiaoDich")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.KhachHang", "KhachHang")
                        .WithMany("ICHoaDon")
                        .HasForeignKey("ID_KhachHang")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.LoaiPhong", "LoaiPhong")
                        .WithMany("ICHoaDon")
                        .HasForeignKey("ID_LoaiPhong")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.Phong", "Phong")
                        .WithMany("ICHoaDon")
                        .HasForeignKey("ID_Phong")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("ICHoaDon")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GiaoCa");

                    b.Navigation("GiaoDich");

                    b.Navigation("KhachHang");

                    b.Navigation("LoaiPhong");

                    b.Navigation("Phong");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Lau", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.CoSo", "CoSo")
                        .WithMany("ICLau")
                        .HasForeignKey("ID_CoSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CoSo");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Luong", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("ICLuong")
                        .HasForeignKey("ID_TaiKhoan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Phong", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.CoSo", "CoSo")
                        .WithMany("ICPhong")
                        .HasForeignKey("ID_CoSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.Lau", "Lau")
                        .WithMany("ICPhong")
                        .HasForeignKey("ID_Lau")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.LoaiPhong", "LoaiPhong")
                        .WithMany("ICPhong")
                        .HasForeignKey("ID_LoaiPhong")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CoSo");

                    b.Navigation("Lau");

                    b.Navigation("LoaiPhong");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.PhongBan", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.LoaiPhongBan", "LoaiPhongBan")
                        .WithMany("ICPhongBan")
                        .HasForeignKey("ID_LoaiPhongBan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("LoaiPhongBan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.CoSo", "CoSo")
                        .WithMany("ICTaiKhoan")
                        .HasForeignKey("ID_CoSo")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.PhongBan", "PhongBan")
                        .WithMany("ICTaiKhoan")
                        .HasForeignKey("ID_PhongBan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("CoSo");

                    b.Navigation("PhongBan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan_QuyenHan", b =>
                {
                    b.HasOne("Project_DATN.Data.EF.Entities.QuyenHan", "QuyenHan")
                        .WithMany("IC_TK_QH")
                        .HasForeignKey("ID_QuyenHan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Project_DATN.Data.EF.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("IC_TK_QH")
                        .HasForeignKey("ID_QuyenHan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("QuyenHan");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.CoSo", b =>
                {
                    b.Navigation("ICLau");

                    b.Navigation("ICPhong");

                    b.Navigation("ICTaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.DatPhong", b =>
                {
                    b.Navigation("ICHoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.DichVu", b =>
                {
                    b.Navigation("ICChiTietHoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.GiaoCa", b =>
                {
                    b.Navigation("ICHoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.GiaoDich", b =>
                {
                    b.Navigation("ICHoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.HoaDon", b =>
                {
                    b.Navigation("ICChiTiet_HoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.KhachHang", b =>
                {
                    b.Navigation("ICDatPhong");

                    b.Navigation("ICHoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Lau", b =>
                {
                    b.Navigation("ICPhong");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.LoaiDichVu", b =>
                {
                    b.Navigation("ICDichVu");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.LoaiPhong", b =>
                {
                    b.Navigation("ICDatPhong");

                    b.Navigation("ICHoaDon");

                    b.Navigation("ICPhong");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.LoaiPhongBan", b =>
                {
                    b.Navigation("ICPhongBan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Phong", b =>
                {
                    b.Navigation("ICHoaDon");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.PhongBan", b =>
                {
                    b.Navigation("ICChucVu");

                    b.Navigation("ICTaiKhoan");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Quan_Huyen", b =>
                {
                    b.Navigation("ICCoSo");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.QuyenHan", b =>
                {
                    b.Navigation("IC_ChiTiet_QuyenHan");

                    b.Navigation("IC_TK_QH");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan", b =>
                {
                    b.Navigation("IC_TK_QH");

                    b.Navigation("ICChucVu");

                    b.Navigation("ICGiaoCa");

                    b.Navigation("ICHoaDon");

                    b.Navigation("ICLuong");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.TaiKhoan_NganHang", b =>
                {
                    b.Navigation("ICCoSo");
                });

            modelBuilder.Entity("Project_DATN.Data.EF.Entities.Tinh_ThanhPho", b =>
                {
                    b.Navigation("ICCoSo");
                });
#pragma warning restore 612, 618
        }
    }
}
